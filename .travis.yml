# -*- coding: utf-8 -*-
# vim: ft=yaml
---
## Machine config
os: 'linux'
arch: 'amd64'
dist: 'bionic'
version: '~> 1.0'

## Language and cache config
language: 'ruby'
cache: 'bundler'

## Services config
services:
  - docker

## Script to run for the test stage
script:
  - bin/kitchen verify "${INSTANCE}"

## Stages and jobs matrix
stages:
  - test
  - name: 'release'
    if: 'branch = master AND type != pull_request'
jobs:
  include:
    ## Define the test stage that runs the linters (and testing matrix, if applicable)

    
    
    
    
    
    
    
     #}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     #}
     #}
    
    
    
    
    
    
    
    
    
    
    
    
    

    # Run `pre-commit` linters in a single job
    - language: 'python'
      env: 'Lint_pre-commit'
      name: 'Lint: pre-commit'
      before_install: 'skip'
      cache:
        directories:
          - $HOME/.cache/pre-commit
      script:
        # Install and run `pre-commit`
        - pip install pre-commit==2.7.1
        - pre-commit run --all-files --color always --verbose
        # - pre-commit run --color always --hook-stage manual --verbose commitlint-travis

    ## Define the rest of the matrix based on Kitchen testing
    # Make sure the instances listed below match up with
    # the `platforms` defined in `kitchen.yml`
    # - env: INSTANCE=default-debian-10-master-py3
    # - env: INSTANCE=default-ubuntu-2004-master-py3
    # - env: INSTANCE=default-ubuntu-1804-master-py3
    # - env: INSTANCE=default-centos-8-master-py3
    # - env: INSTANCE=default-fedora-32-master-py3
    # - env: INSTANCE=default-fedora-31-master-py3
    # - env: INSTANCE=default-opensuse-leap-152-master-py3
    # - env: INSTANCE=default-amazonlinux-2-master-py3
    # - env: INSTANCE=default-debian-10-3000-3-py3
    # - env: INSTANCE=default-debian-9-3000-3-py3
    # - env: INSTANCE=default-ubuntu-1804-3000-3-py3
    # - env: INSTANCE=default-centos-8-3000-3-py3
    # - env: INSTANCE=default-centos-7-3000-3-py3
    # - env: INSTANCE=default-fedora-31-3000-3-py3
    # - env: INSTANCE=default-opensuse-leap-152-3000-3-py3
    # - env: INSTANCE=default-amazonlinux-2-3000-3-py3
    # - env: INSTANCE=default-ubuntu-1804-3000-3-py2
    # - env: INSTANCE=default-ubuntu-1604-3000-3-py2
    # - env: INSTANCE=default-arch-base-latest-3000-3-py2
    # - env: INSTANCE=default-debian-10-2019-2-py3
    # - env: INSTANCE=default-debian-9-2019-2-py3
    # - env: INSTANCE=default-ubuntu-1804-2019-2-py3
    # - env: INSTANCE=default-ubuntu-1604-2019-2-py3
    # - env: INSTANCE=default-centos-8-2019-2-py3
    # - env: INSTANCE=default-centos-7-2019-2-py3
    # - env: INSTANCE=default-fedora-31-2019-2-py3
    # - env: INSTANCE=default-opensuse-leap-152-2019-2-py3
    # - env: INSTANCE=default-amazonlinux-2-2019-2-py3
    # - env: INSTANCE=default-centos-6-2019-2-py2
    # - env: INSTANCE=default-amazonlinux-1-2019-2-py2
    # - env: INSTANCE=default-arch-base-latest-2019-2-py2

    ## Define the release stage that runs `semantic-release`
    - stage: 'release'
      language: 'node_js'
      node_js: 'lts/*'
      env: 'Release'
      name: 'Run semantic-release inc. file updates to AUTHORS, CHANGELOG & FORMULA'
      before_install: 'skip'
      script:
        # Update `AUTHORS.md`
        - export MAINTAINER_TOKEN=${GH_TOKEN}
        - go get github.com/myii/maintainer
        - maintainer contributor

        # Install all dependencies required for `semantic-release`
        - npm i -D @semantic-release/changelog@3
                   @semantic-release/exec@3
                   @semantic-release/git@7
      deploy:
        provider: 'script'
        # Opt-in to `dpl v2` to complete the Travis build config validation (beta)
        # * https://docs.travis-ci.com/user/build-config-validation
        # Deprecated `skip_cleanup` can now be avoided, `cleanup: false` is by default
        edge: true
        # Run `semantic-release`
        script: 'npx semantic-release@15.14'

# Notification options: `always`, `never` or `change`
notifications:
  webhooks:
    # yamllint disable rule:line-length
    if: 'repo = saltstack-formulas/zabbix-formula OR repo = myii/zabbix-formula'
    urls:
      - https://saltstack-formulas.zulipchat.com/api/v1/external/travis?api_key=HsIq3o5QmLxdnVCKF9is0FUIpkpAY79P&stream=CI&topic=pre-commit%2F2020-W40_02&ignore_pull_requests=true
    # yamllint enable rule:line-length
    on_success: always  # default: always
    on_failure: always  # default: always
    on_start: never     # default: never
    on_cancel: always   # default: always
    on_error: always    # default: always
